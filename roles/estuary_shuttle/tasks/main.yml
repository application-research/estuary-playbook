---
- name: Install build-essential (Ubuntu and Debian)
  ansible.builtin.package:
    name: build-essential
    state: present
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: Install main dependencies
  ansible.builtin.package:
    name:
      - wget
      - jq
      - hwloc
      - ocl-icd-opencl-dev
      - git
      - libhwloc-dev
      - pkg-config
    state: present
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: Create estuary folder
  ansible.builtin.file:
    path: /usr/local/ src/estuary
    owner: "{{ estuary_system_user | default('estuary') }}"
    group: "{{ estuary_system_user | default('estuary') }}"
    mode: 0700
    state: directory
    recurse: false

- name: Check out Estuary from git
  ansible.builtin.git:
    repo: https://github.com/application-research/estuary
    dest: /usr/local/src/estuary
    version: "{{ estuary_version }}"
  become_user: "{{ estuary_system_user | default('estuary') }}"

- name: Compile Estuary
  ansible.builtin.shell:
    # We force golang and bashrc to load, otherwise Rust and Go won't work.
    cmd: source /etc/profile.d/golang.sh ; source /home/{{ estuary_system_user | default('estuary') }}/.cargo/env ; RUSTFLAGS="-C target-cpu=native -g" FFI_BUILD_FROM_SOURCE=1 make all
    creates: /usr/local/src/estuary/estuary
    chdir: /usr/local/src/estuary
    executable: /bin/bash
  become_user: "{{ estuary_system_user | default('estuary') }}"

- name: Ensure estuary top directory exists
  ansible.builtin.file:
    path: /opt/estuary
    owner: "{{ estuary_system_user | default('estuary') }}"
    group: "{{ estuary_system_user | default('estuary') }}"
    mode: 0700
    state: directory
    recurse: false

- name: Ensure estuary private directory exists
  ansible.builtin.file:
    path: /opt/estuary/private
    owner: "{{ estuary_system_user | default('estuary') }}"
    group: "{{ estuary_system_user | default('estuary') }}"
    mode: 0700
    state: directory
    recurse: false

- name: Ensure Estuary database data directory exists with correct permissions
  ansible.builtin.file:
    path: "{{ estuary_data }}"
    owner: "{{ estuary_system_user | default('estuary') }}"
    group: "{{ estuary_system_user | default('estuary') }}"
    mode: 0755
    state: directory

- name: Ensure Estuary Shuttle data directory exists with correct permissions
  ansible.builtin.file:
    path: "{{ estuary_shuttle_data }}"
    owner: "{{ estuary_system_user | default('estuary') }}"
    group: "{{ estuary_system_user | default('estuary') }}"
    mode: 0755
    state: directory

- name: Install Estuary token
  ansible.builtin.copy:
    src: secrets/token
    dest: /opt/estuary/private/token
    owner: root
    group: root
    mode: 0700

- name: Generate a shuttle token
  ansible.builtin.shell:
    cmd: 'curl -H "Authorization: Bearer $(cat /opt/estuary/private/token)" -X POST https://{{ estuary_hostname }}/admin/shuttle/init > /opt/estuary/private/shuttle_token'
    executable: /bin/bash
    creates: /opt/estuary/private/shuttle_token

- name: Extract shuttle token actual
  ansible.builtin.shell:
    cmd: "cat /opt/estuary/private/shuttle_token | jq -r '.handle' > /opt/estuary/private/shuttle_token_handle"
    executable: /bin/bash
    creates: /opt/estuary/private/shuttle_token_handle

- name: Extract shuttle token actual
  ansible.builtin.shell:
    cmd: "cat /opt/estuary/private/shuttle_token| jq -r '.token' > /opt/estuary/private/shuttle_token_actual"
    executable: /bin/bash
    creates: /opt/estuary/private/shuttle_token_actual

- name: Install Estuary shuttle service
  ansible.builtin.template:
    src: estuary-shuttle.service
    dest: /etc/systemd/system/estuary-shuttle.service
    owner: root
    group: root
    mode: 0755

- name: Create config directory for estuary shuttle
  ansible.builtin.file:
    path: /etc/estuary-shuttle
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy main config
  ansible.builtin.template:
    src: config.env
    dest: /etc/estuary-shuttle/config.env
    owner: root
    group: root
    mode: 0644

- name: Copy logging config
  ansible.builtin.template:
    src: log.env
    dest: /etc/estuary-shuttle/log.env
    owner: root
    group: root
    mode: 0644

- name: Run daemon-reload
  ansible.builtin.systemd:
    daemon_reload: true

- name: Ensure estuary shuttle is running
  ansible.builtin.systemd:
    name: estuary-shuttle
    state: started
    enabled: true
